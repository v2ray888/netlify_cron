// Netlify È´òÈ¢ëÂÆöÊó∂‰ªªÂä°ÂáΩÊï∞
// Áî®‰∫éÂ§ÑÁêÜÈúÄË¶ÅÊõ¥È¢ëÁπÅÊâßË°åÁöÑ‰ªªÂä°ÔºàÂ¶ÇÊØèÂàÜÈíüÊâßË°åÔºâ

import { schedule } from "@netlify/functions";
import fetch from "node-fetch";

// ÊØè5ÂàÜÈíüÊâßË°å‰∏ÄÊ¨°ÁöÑÈ´òÈ¢ëÂÆöÊó∂‰ªªÂä°
// Ê≥®ÊÑèÔºöËøô‰ºöÊ∂àËÄóÊõ¥Â§öÁöÑÂáΩÊï∞Ë∞ÉÁî®Ê¨°Êï∞
export const handler = schedule("*/5 * * * *", async (event) => {
  const CRON_URL = process.env.CRON_URL || "http://localhost:3000/api/cron";
  const CRON_SECRET = process.env.CRON_SECRET || "default-secret";
  
  try {
    console.log("üöÄ Netlify high-frequency cron job triggered at:", new Date().toISOString());
    
    const response = await fetch(CRON_URL, {
      method: "POST", // ‰ΩøÁî® POST ÊñπÊ≥ï‰ª•ÊîØÊåÅËÆ§ËØÅ
      headers: {
        "User-Agent": "Netlify-High-Frequency-Cron/1.0",
        "Authorization": `Bearer ${CRON_SECRET}`
      }
    });
    
    const result = await response.json();
    console.log("‚úÖ High-frequency cron job completed:", result);
    
    return {
      statusCode: 200,
      body: JSON.stringify({
        message: "High-frequency cron job executed successfully",
        timestamp: new Date().toISOString(),
        result
      })
    };
  } catch (error) {
    console.error("‚ùå Error in high-frequency cron job:", error);
    return {
      statusCode: 500,
      body: JSON.stringify({
        error: "Failed to execute high-frequency cron job",
        message: error.message
      })
    };
  }
});